name: Deploy RG Balancer

on:
  workflow_dispatch:

env: # ðŸ‘ˆ global env
  APP_NAME: resolute-games
  APP_DOMAIN: purrservers.com
  APP_SECRET: ${{ secrets.RG_APP_SECRET }}
  BAL_REGION: ewr

jobs:
  # -------------------
  # Balancer (single region, no env overrides)
  # -------------------
  balancer:
    name: Build Balancer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Ensure app exists
        run: |
          if ! flyctl apps list | grep -q "^$APP_NAME"; then
            echo "Creating app $APP_NAME in region $BAL_REGION"
            flyctl apps create $APP_NAME
          else
            echo "App $APP_NAME already exists"
          fi
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Deploy Balancer
        working-directory: PurrBalancer
        run: |
          flyctl deploy --remote-only --strategy immediate \
            --app $APP_NAME \
            --primary-region $BAL_REGION \
            --env SECRET="${APP_SECRET}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Ensure cert exists
        run: |
          flyctl certs create "${APP_NAME}.${APP_DOMAIN}" --app $APP_NAME || true
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Force scale to 1
        run: flyctl scale count 1 --app $APP_NAME --yes
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  # -------------------
  # Relays (matrix deploy)
  # -------------------
  deploy:
    name: Build Relay
    runs-on: ubuntu-latest
    needs: balancer
    strategy:
      matrix:
        include:
          - region: ewr
            prefix: ewr-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Ensure app exists
        run: |
          RELAY_APP="${APP_NAME}-${{ matrix.prefix }}"
          if ! flyctl apps list | grep -q "^$RELAY_APP"; then
            echo "Creating relay app $RELAY_APP in region ${{ matrix.region }}"
            flyctl apps create $RELAY_APP
          else
            echo "Relay app $RELAY_APP already exists"
          fi
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Deploy Relay
        working-directory: PurrLay
        run: |
          flyctl deploy --remote-only --strategy immediate \
            --app "${APP_NAME}-${{ matrix.prefix }}" \
            --primary-region ${{ matrix.region }} \
            --env BALANCER_URL="https://${APP_NAME}.fly.dev" \
            --env HOST_DOMAIN="${APP_NAME}-${{ matrix.prefix }}.fly.dev" \
            --env HOST_REGION=${{ matrix.prefix }} \
            --env HOST_SSL="true" \
            --env SECRET="${APP_SECRET}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Force scale to 1
        run: flyctl scale count 1 --app "${APP_NAME}-${{ matrix.prefix }}" --yes
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
